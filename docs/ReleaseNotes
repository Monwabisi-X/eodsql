Version 2.2-alpha
    * Another fix for NPE when selecting an empty Collection
Version 2.1
    * Fixed an NPE when selecting an empty Collection
    * Fixed bugs when running under Java 1.5
    * byte[] is now considered a primitive type, and can be mapped to a BINARY or VARBINARY column
Version 2.1-rc1
    * WritableDataSet fixes
    * Batch updates merged into trunk
    * Many other bug fixes
Version 2.1-beta
    * Several important bug fixes to ConnectedDataSet Iterators
    * You can now return concrete Collection types (CopyOnWriteArrayList, Vector, MySetImplementation, etc.) from @Select methods
    * @Select methods can now populate existing objects passed in as method parameters
Version 2.1-alpha
    * Added a series of SoftReference style caches in to lower the Query Object construction overhead
    * @Call annotated methods may optionally return DataSet's that are updatable
    * @Select methods may not specify an optional fetchSize hint
Version 2.0
    * Removed the SelectPrimitive annotation, use @Select instead
    * TransactionQueries can be constructed with a DataSource as well as a Connection.
        This has the side-effect of holding the Connection until the TransactionQuery is closed.
Version 2.0-rc1
    * Fixed a bug with the QueryTool.select not closing the Connections as expected
    * Context.close is now safer to use under JDBC drivers that throw Exceptions when
        close() is invoked on a closed resource
Version 2.0-beta2
    * TransactionQuery, RETURN_KEYS_FIRST_COLUMN and @Call should work once again
    * Using AS to change column names should work in EoD now thanks to a change in the way we lookup column names
    * The "one annotation per method" restriction has been lifted
Version 2.0-beta
    QueryTool.select is now working again, and includes a new variant that uses a Connection instead of a DataSource.
    Fixed the Accessibility structure so that private / protected / package-protected methods fields and constructors can be used
    Added "char" and "Character" as default primitive types
    The Java primitive TypeMappers (short, int, long, boolean, etc.) now use valueOf instead of new
Version 2.0-alpha
    Added the ability to register/deregister QueryFactories by hand (for Java 1.5 users)
    Much of the API is now exposed in the spi.util package
    Method implementations are no longer lazy-loaded
    @SelectPrimitive is now depracated (in favour of an @Select)
    The Type-Map is no longer thread-safe. Any changes to it should be made /before/ any database work is done
    If the default DataObjectBinding is used, and EoD SQL is able to set the accessable flag, fields and methods no longer have to be public
    DataIterators are no longer thread-safe, this improves their performance but could break code (unlikely).
    For now, the QueryTool.select method throws an UnsupportedOperationException and may be removed soon
    @Call annotation allows for usage of Stored Procs.
Version 1.1
    Plenty of internal cleaning up
    Added SPI query-generators (only available under Java 6)
    Added GeneratedKeys.RETURNED_KEYS_FIRST_COLUMN
    Updatable DataSet objects
    Added a complete list of the Methods supported by the different DataSet classes
Version 1.0 (2007-11-18)
    Added the QueryTool.select method for less structured / once-off queries
    Added the DataSetCache, ArrayDataSetCache and NullDataSetCache for controlling the way a DataSet caches row values
    ConnectedDataSet's don't disconnect as often anymore, but are not thread-safe
    DataSourceQueryHandler's now understand threading, and will reuse open connections if it's safe to
    The deprecated methods in QueryTool have been removed!
    Brand new tutorial!
Version 0.9 (2007-05-22)
    Validation of queries is now handles by the QueryValidator class
    @SelectPrimitive can now handle collections and arrays of primitives
    java.sql.Date; Time; and Timestamp are now known primitive-types
Version 0.8-beta (2007-03-22)
    More bug fixes (most to do with popular pooling libs)
    New ant script that doesn't use any Netbeans tasks (remains compatible with Netbeans however)
    Removed the MySQL JAR from the source, added Hypersonic (for test only)
    Column names are now treated as case-insensitive
    Dates are now set as a TIMESTAMP or DATE rather than an Object
Version 0.7-beta (2007-02-22)
    Several major internal bugs fixed
    Data-type mapping is now handled by EoD SQL, instead of by the JDBC driver
    Added new convenience methods "getQuery" to the QueryTool
Version 0.6-beta (2007-02-06)
    Theres been a fair amount of refactoring and cleaning up in the code,
    so there may be some bugs that have not yet been picked up.
Version 0.5-beta (2007-01-24)
    No known bugs of any sort (though there almost certainly are some).
    Check out the new documentation in QueryTool and read about the
    new pool-friendly Query implementations.